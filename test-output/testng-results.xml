<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1155" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:25 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1155" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:25 IST">
      <class name="extentreports.GenerateExtentReports">
        <test-method status="PASS" signature="startreport()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="startreport" is-config="true" duration-ms="333" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startreport -->
        <test-method status="FAIL" signature="demoMethodFail()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="demoMethodFail" duration-ms="23" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at extentreports.GenerateExtentReports.demoMethodFail(GenerateExtentReports.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoMethodFail -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="getResult" is-config="true" duration-ms="12" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoMethodFail status=FAILURE method=GenerateExtentReports.demoMethodFail()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="demoMethodPass()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="demoMethodPass" duration-ms="4" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoMethodPass -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="getResult" is-config="true" duration-ms="1" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoMethodPass status=SUCCESS method=GenerateExtentReports.demoMethodPass()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:extentreports.GenerateExtentReports@22a67b4]" name="endReport" is-config="true" duration-ms="660" started-at="2020-07-09T16:11:24 IST" finished-at="2020-07-09T16:11:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extentreports.GenerateExtentReports -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
